type User @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  updatedAt: DateTime! # optional system field (read-only)
  email: String! @isUnique # for authentication
  password: String! # for authentication
  name: String!
  links: [Link!]! @relation(name: "UsersLinks")
  votes: [Vote!]! @relation(name: "UsersVotes")
}

type Link @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  updatedAt: DateTime! # optional system field (read-only)
  description: String!
  url: String!
  postedBy: User! @relation(name: "UsersLinks")
  votes: [Vote!]! @relation(name: "VotesOnLink")
}

type Vote @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  user: User! @relation(name: "UsersVotes")
  link: Link! @relation(name: "VotesOnLink")
}

type Vote @model {
  id: ID! @isUnique
  user: User! @relation(name: "UsersVotes")
  link: Link! @relation(name: "VotesOnLink")
}

# added by email-password template: (please uncomment)
# type User @model {
#   # Required system field:
#   id: ID! @isUnique # read-only (managed by Graphcool)
#
#   # Optional system fields (remove if not needed):
#   createdAt: DateTime! # read-only (managed by Graphcool)
#   updatedAt: DateTime! # read-only (managed by Graphcool)
#
#   email: String! @isUnique
#   password: String!
# }
#
